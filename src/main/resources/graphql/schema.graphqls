scalar Date

type User {
    id: ID!
    firstName: String
    lastName: String
    dateOfBirth: Date
    role: Role!
    username: String!
}

enum Role {
    ADMIN
    OPERATOR
    USER
}

type Query {
    users: [User!]! @auth(requires: [USER, OPERATOR, ADMIN])
}

type Mutation {
    createUser(username: String!, password: String!, firstName: String, lastName: String, dateOfBirth: Date, role: Role!): User @auth(requires: ADMIN)
    updateUser(id: ID!, firstName: String, lastName: String, dateOfBirth: Date): User @auth(requires: [OPERATOR, ADMIN])
}

directive @auth(requires: [Role!]!) on FIELD_DEFINITION
